name: ERC-4337 Smart Wallet CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'
      
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      
      - name: Cache Hardhat compilation
        uses: actions/cache@v3
        with:
          path: |
            cache
            artifacts
          key: ${{ runner.os }}-hardhat-${{ hashFiles('contracts/**/*.sol') }}
          restore-keys: |
            ${{ runner.os }}-hardhat-
        
      - name: Verify CI environment
        run: ./scripts/verify-ci.sh
        
      - name: Compile contracts
        run: yarn compile
        
      - name: Troubleshooting info
        run: |
          echo "Node version: $(node -v)"
          echo "Yarn version: $(yarn -v)"
          echo "Directory structure:"
          find . -type d -maxdepth 2 | sort
          echo "Package.json:"
          cat package.json
        
      - name: Run BDD tests for ERC-4337
        run: yarn test:bdd-erc4337
        
      - name: Store test results
        uses: actions/upload-artifact@v3
        with:
          name: cucumber-report
          path: cucumber-report.html
          if-no-files-found: ignore
        
      - name: Run unit tests
        run: yarn test

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'
      
      - name: Install dependencies
        run: yarn install --frozen-lockfile
        
      - name: Run solidity linter
        run: yarn solhint 'contracts/**/*.sol'

  deploy:
    needs: [test, lint]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'
      
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      
      - name: Cache Hardhat compilation
        uses: actions/cache@v3
        with:
          path: |
            cache
            artifacts
          key: ${{ runner.os }}-hardhat-${{ hashFiles('contracts/**/*.sol') }}
          restore-keys: |
            ${{ runner.os }}-hardhat-
        
      - name: Setup environment
        run: |
          echo "Setting up environment variables..."
          # Copy example env to .env for deployment purposes
          cp .env.example .env
          
      - name: Deploy to Sepolia testnet
        run: yarn deploy:sepolia
        env:
          PRIVATE_KEY: ${{ secrets.DEPLOY_PRIVATE_KEY }}
          INFURA_API_KEY: ${{ secrets.INFURA_API_KEY }}
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }} 