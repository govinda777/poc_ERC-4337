name: ERC-4337 Smart Wallet CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Debug environment
        run: |
          echo "GitHub runner info:"
          echo "OS: $(uname -a)"
          echo "GitHub Actions runner version: ${{ runner.os }}-${{ runner.arch }}"
          echo "Available disk space:"
          df -h
          echo "Memory info:"
          free -h
          echo "GitHub context:"
          echo "Event: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Workspace: ${{ github.workspace }}"
          
      - uses: actions/checkout@v1
      
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16'
      
      - name: Install dependencies
        run: |
          npm install -g yarn
          yarn install --frozen-lockfile
      
      - name: Manual cache for Hardhat
        run: |
          mkdir -p ~/.cache-hardhat
          if [ -d "cache" ]; then
            cp -r cache ~/.cache-hardhat/
          fi
          if [ -d "artifacts" ]; then
            cp -r artifacts ~/.cache-hardhat/
          fi
        
      - name: Check script permissions
        run: |
          ls -la scripts/
          chmod +x scripts/verify-ci.sh
          ls -la scripts/verify-ci.sh
        
      - name: Verify CI environment
        run: ./scripts/verify-ci.sh
        
      - name: Compile contracts
        run: yarn compile
        
      - name: Restore from manual cache
        run: |
          if [ -d "~/.cache-hardhat/cache" ]; then
            cp -r ~/.cache-hardhat/cache .
          fi
          if [ -d "~/.cache-hardhat/artifacts" ]; then
            cp -r ~/.cache-hardhat/artifacts .
          fi
        
      - name: Troubleshooting info
        run: |
          echo "Node version: $(node -v)"
          echo "Yarn version: $(yarn -v)"
          echo "Directory structure:"
          find . -type d -maxdepth 2 | sort
          echo "Package.json:"
          cat package.json
        
      - name: Run BDD tests for ERC-4337
        run: yarn test:bdd-erc4337
        
      - name: Run unit tests
        run: yarn test

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Debug environment
        run: |
          echo "GitHub runner info:"
          echo "OS: $(uname -a)"
          echo "GitHub Actions runner version: ${{ runner.os }}-${{ runner.arch }}"
      
      - uses: actions/checkout@v1
      
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16'
      
      - name: Install dependencies
        run: |
          npm install -g yarn
          yarn install --frozen-lockfile
        
      - name: Run solidity linter
        run: yarn solhint 'contracts/**/*.sol'

  deploy:
    needs: [test, lint]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    steps:
      - name: Debug environment
        run: |
          echo "GitHub runner info:"
          echo "OS: $(uname -a)"
          echo "GitHub Actions runner version: ${{ runner.os }}-${{ runner.arch }}"
      
      - uses: actions/checkout@v1
      
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16'
      
      - name: Install dependencies
        run: |
          npm install -g yarn
          yarn install --frozen-lockfile
      
      - name: Manual cache for Hardhat
        run: |
          mkdir -p ~/.cache-hardhat
          if [ -d "cache" ]; then
            cp -r cache ~/.cache-hardhat/
          fi
          if [ -d "artifacts" ]; then
            cp -r artifacts ~/.cache-hardhat/
          fi
        
      - name: Setup environment
        run: |
          echo "Setting up environment variables..."
          # Copy example env to .env for deployment purposes
          cp .env.example .env
          
      - name: Deploy to Sepolia testnet
        run: yarn deploy:sepolia
        env:
          PRIVATE_KEY: ${{ secrets.DEPLOY_PRIVATE_KEY }}
          INFURA_API_KEY: ${{ secrets.INFURA_API_KEY }}
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }} 